------------------------ QUERY 1 ------------------------
SELECT M.TITLE_MOVIE, COD_STORE TIENDA, QUANTITY
FROM INVENTORY
INNER JOIN MOVIE M on M.COD_MOVIE = INVENTORY.COD_MOVIE
WHERE M.TITLE_MOVIE = 'SUGAR WONKA';

------------------------ QUERY 2 ------------------------
SELECT US.FIRST_LAST_USER NOMBRE_APELLIDO,
       SUM(AMOUNT_PAY) PAGO_TOTAL
FROM RENT
INNER JOIN USER_STORE US on RENT.FK_IDCLIENT = US.CODE_USER
GROUP BY US.FIRST_LAST_USER
HAVING COUNT(FK_IDCLIENT) >= 40;

------------------------ QUERY 3 ------------------------
CREATE VIEW DAYS_LATE AS
SELECT FK_IDCLIENT, FK_IDMOVIE, TO_NUMBER(
    SUBSTR(
        (DELIVERY_DATE - RENT_DATE), 1, INSTR((DELIVERY_DATE - RENT_DATE), ' ')-1)
    ) AS DIAS_PASADOS
FROM RENT
WHERE TO_NUMBER(
    SUBSTR(
        (DELIVERY_DATE - RENT_DATE), 1, INSTR((DELIVERY_DATE - RENT_DATE), ' ')-1)
    ) > 0;

SELECT US.FIRST_LAST_USER, DIAS_PASADOS, M.TITLE_MOVIE FROM DAYS_LATE DL
INNER JOIN USER_STORE US ON DL.FK_IDCLIENT = US.CODE_USER
INNER JOIN MOVIE M ON DL.FK_IDMOVIE = M.COD_MOVIE;

------------------------ QUERY 4 ------------------------
SELECT FIRST_LAST_ACTOR
FROM ACTOR
WHERE SUBSTR(FIRST_LAST_ACTOR, INSTR(FIRST_LAST_ACTOR, ' ')+1) LIKE '%son%'
ORDER BY FIRST_LAST_ACTOR ASC;

------------------------ QUERY 5 ------------------------
SELECT SUBSTR(FIRST_LAST_ACTOR, INSTR(FIRST_LAST_ACTOR, ' ')+1) APELLIDO,
       COUNT(SUBSTR(FIRST_LAST_ACTOR, INSTR(FIRST_LAST_ACTOR, ' ')+1)) CANTIDAD
FROM ACTOR
HAVING COUNT(SUBSTR(FIRST_LAST_ACTOR, INSTR(FIRST_LAST_ACTOR, ' ')+1)) >= 2
GROUP BY SUBSTR(FIRST_LAST_ACTOR, INSTR(FIRST_LAST_ACTOR, ' ')+1);

------------------------ QUERY 6 ------------------------
SELECT FIRST_LAST_ACTOR, TITLE_MOVIE, RELEASE_YEAR FROM MOV_ACT
INNER JOIN ACTOR A2 on A2.COD_ACTOR = MOV_ACT.FK_COD_ACTOR
INNER JOIN MOVIE M on M.COD_MOVIE = MOV_ACT.FK_COD_MOV
WHERE M.DESC_MOVIE LIKE '%Crocodile%' AND M.DESC_MOVIE LIKE '%Shark%'
ORDER BY SUBSTR(FIRST_LAST_ACTOR, INSTR(FIRST_LAST_ACTOR, ' ')+1) ASC;

------------------------ QUERY 7 ------------------------
SELECT C2.NAME_CATEGORY, COUNT(FK_COD_MOV) Cantidad_Peliculas FROM MOV_CATEGORY
INNER JOIN CATEGORY C2 on C2.COD_CATEGORY = MOV_CATEGORY.MOV_CATEGORY
HAVING COUNT(FK_COD_MOV) >= 55 AND COUNT(FK_COD_MOV) <= 65
GROUP BY C2.NAME_CATEGORY;

------------------------ QUERY 8 ------------------------
SELECT C2.NAME_CATEGORY,
       ROUND(AVG(M.SURCHARGE_COST - M.UNIT_COST), 2) PROMEDIO
FROM MOV_CATEGORY
INNER JOIN CATEGORY C2 on C2.COD_CATEGORY = MOV_CATEGORY.MOV_CATEGORY
INNER JOIN MOVIE M on M.COD_MOVIE = MOV_CATEGORY.FK_COD_MOV
GROUP BY C2.NAME_CATEGORY
HAVING AVG(M.SURCHARGE_COST - M.UNIT_COST) > 17;

------------------------ QUERY 9 ------------------------
SELECT M.TITLE_MOVIE, A2.FIRST_LAST_ACTOR FROM MOV_ACT
INNER JOIN ACTOR A2 on A2.COD_ACTOR = MOV_ACT.FK_COD_ACTOR
INNER JOIN MOVIE M on M.COD_MOVIE = MOV_ACT.FK_COD_MOV
WHERE (
    SELECT COUNT(M.TITLE_MOVIE) FROM MOV_ACT
    INNER JOIN MOVIE M on M.COD_MOVIE = MOV_ACT.FK_COD_MOV
) >= 1
AND (
    SELECT COUNT(A3.COD_ACTOR) FROM MOV_ACT
    INNER JOIN ACTOR A3 on A3.COD_ACTOR = MOV_ACT.FK_COD_ACTOR
) >= 2

------------------------ QUERY 10 ------------------------
SELECT FIRST_LAST_ACTOR FROM ACTOR
WHERE SUBSTR(FIRST_LAST_ACTOR, 1, INSTR(FIRST_LAST_ACTOR, ' ')-1) = (
    SELECT SUBSTR(FIRST_LAST_ACTOR, 1, INSTR(FIRST_LAST_ACTOR, ' ')-1)
    FROM ACTOR WHERE COD_ACTOR = 8
)
UNION
SELECT FIRST_LAST_USER FROM USER_STORE
WHERE SUBSTR(FIRST_LAST_USER, 1, INSTR(FIRST_LAST_USER, ' ')-1) = (
    SELECT SUBSTR(FIRST_LAST_ACTOR, 1, INSTR(FIRST_LAST_ACTOR, ' ')-1)
    FROM ACTOR WHERE COD_ACTOR = 8
);

SELECT FIRST_LAST_ACTOR NOMBRE_APELLIDO FROM ACTOR
WHERE SUBSTR(FIRST_LAST_ACTOR, 1, INSTR(FIRST_LAST_ACTOR, ' ')-1) = 'Matthew'
UNION
SELECT FIRST_LAST_USER FROM USER_STORE
WHERE SUBSTR(FIRST_LAST_USER, 1, INSTR(FIRST_LAST_USER, ' ')-1) = 'Matthew';

------------------------ QUERY 11 ------------------------
SELECT FIRST_LAST_USER, C3.NAME_COUNTRY, COUNT(*) NO_RENTAS,
       CONCAT(
           ROUND(
               (COUNT(*) / ( SELECT COUNT(*) FROM RENT
                   INNER JOIN USER_STORE U on U.CODE_USER = RENT.FK_IDCLIENT
                   INNER JOIN CITY C4 on C4.COD_CITY = U.FK_IDCITY
                   INNER JOIN COUNTRY C5 on C5.COD_COUNTRY = C4.FK_IDCOUNTRY
                   AND C3.NAME_COUNTRY = C5.NAME_COUNTRY) * 100),
            2),
        '%') PORCENTAJE
FROM RENT
INNER JOIN USER_STORE US on US.CODE_USER = RENT.FK_IDCLIENT
INNER JOIN CITY C2 on C2.COD_CITY = US.FK_IDCITY
INNER JOIN COUNTRY C3 on C3.COD_COUNTRY = C2.FK_IDCOUNTRY
GROUP BY FIRST_LAST_USER, C3.NAME_COUNTRY
ORDER BY COUNT(FIRST_LAST_USER) DESC
FETCH FIRST 1 ROWS ONLY;


------------------------ QUERY 13 ------------------------

SELECT NAME_COUNTRY, FIRST_LAST_USER, MAX_QUANTITY_MOV
FROM (
    SELECT C3.NAME_COUNTRY, FIRST_LAST_USER,
           COUNT(FK_IDMOVIE) QUANTITY_MOVIES,
           MAX(COUNT(FK_IDMOVIE)) OVER ( PARTITION BY C3.NAME_COUNTRY ) MAX_QUANTITY_MOV
    FROM RENT
    INNER JOIN USER_STORE US on US.CODE_USER = RENT.FK_IDCLIENT
    INNER JOIN CITY C2 on C2.COD_CITY = US.FK_IDCITY
    INNER JOIN COUNTRY C3 on C3.COD_COUNTRY = C2.FK_IDCOUNTRY
    GROUP BY C3.NAME_COUNTRY, US.FIRST_LAST_USER
)
WHERE MAX_QUANTITY_MOV = QUANTITY_MOVIES;

------------------------ QUERY 14 ------------------------
SELECT NAME_CITY, NAME_CATEGORY, CANTIDAD_MAX FROM (
    SELECT C2.NAME_CITY, C4.NAME_CATEGORY,
           COUNT(C4.NAME_CATEGORY) CANTIDAD,
           MAX(COUNT(C4.NAME_CATEGORY)) OVER ( PARTITION BY C2.NAME_CITY ) CANTIDAD_MAX
    FROM RENT
    INNER JOIN USER_STORE US on US.CODE_USER = RENT.FK_IDCLIENT
    INNER JOIN CITY C2 on C2.COD_CITY = US.FK_IDCITY
    INNER JOIN COUNTRY C3 on C3.COD_COUNTRY = C2.FK_IDCOUNTRY
    
    INNER JOIN MOVIE M on M.COD_MOVIE = RENT.FK_IDMOVIE
    INNER JOIN MOV_CATEGORY MC on M.COD_MOVIE = MC.FK_COD_MOV
    INNER JOIN CATEGORY C4 on C4.COD_CATEGORY = MC.MOV_CATEGORY
    GROUP BY C2.NAME_CITY, C4.NAME_CATEGORY
)
WHERE CANTIDAD = CANTIDAD_MAX AND NAME_CATEGORY = 'Horror';

------------------------ QUERY 15 ------------------------
SELECT C3.NAME_COUNTRY, C2.NAME_CITY,
       AVG(COUNT(*)) over (PARTITION BY C3.NAME_COUNTRY) AVEGARE_BY_COUNTRY
FROM RENT
INNER JOIN USER_STORE US on US.CODE_USER = RENT.FK_IDCLIENT
INNER JOIN CITY C2 on C2.COD_CITY = US.FK_IDCITY
INNER JOIN COUNTRY C3 on C3.COD_COUNTRY = C2.FK_IDCOUNTRY
GROUP BY C3.NAME_COUNTRY, C2.NAME_CITY;

------------------------ QUERY 16 ------------------------
SELECT C3.NAME_COUNTRY, COUNT(*) CANTIDAD, CONCAT(
    ROUND(
        ( COUNT(*) / ( SELECT COUNT(*) FROM RENT
            INNER JOIN USER_STORE U on U.CODE_USER = RENT.FK_IDCLIENT
            INNER JOIN CITY C5 on C5.COD_CITY = U.FK_IDCITY
            INNER JOIN COUNTRY C6 on C6.COD_COUNTRY = C5.FK_IDCOUNTRY
            INNER JOIN MOVIE M2 on M2.COD_MOVIE = RENT.FK_IDMOVIE
            INNER JOIN MOV_CATEGORY MC2 on M2.COD_MOVIE = MC2.FK_COD_MOV
            INNER JOIN CATEGORY C7 on C7.COD_CATEGORY = MC2.MOV_CATEGORY)* 100
        ), 2
    ), '%'
) Porcentaje

FROM RENT
INNER JOIN USER_STORE US on US.CODE_USER = RENT.FK_IDCLIENT
INNER JOIN CITY C2 on C2.COD_CITY = US.FK_IDCITY
INNER JOIN COUNTRY C3 on C3.COD_COUNTRY = C2.FK_IDCOUNTRY
INNER JOIN MOVIE M on M.COD_MOVIE = RENT.FK_IDMOVIE
INNER JOIN MOV_CATEGORY MC on M.COD_MOVIE = MC.FK_COD_MOV
INNER JOIN CATEGORY C4 on C4.COD_CATEGORY = MC.MOV_CATEGORY
GROUP BY C3.NAME_COUNTRY, C4.NAME_CATEGORY
HAVING C4.NAME_CATEGORY = 'Sports';

------------------------ QUERY 17 ------------------------
SELECT NAME_COUNTRY, NAME_CITY, CANTIDAD FROM (
    SELECT FK_IDCLIENT, NAME_COUNTRY, NAME_CITY, COUNT(*) CANTIDAD FROM RENT
    INNER JOIN USER_STORE US on US.CODE_USER = RENT.FK_IDCLIENT
    INNER JOIN CITY C2 on C2.COD_CITY = US.FK_IDCITY
    INNER JOIN COUNTRY C3 on C3.COD_COUNTRY = C2.FK_IDCOUNTRY
    WHERE NAME_COUNTRY = 'United States'
    GROUP BY FK_IDCLIENT, NAME_COUNTRY, NAME_CITY
) B
WHERE CANTIDAD > (
        SELECT COUNT(*) CANTIDAD FROM RENT
        INNER JOIN USER_STORE US on US.CODE_USER = RENT.FK_IDCLIENT
        INNER JOIN CITY C2 on C2.COD_CITY = US.FK_IDCITY
        INNER JOIN COUNTRY C3 on C3.COD_COUNTRY = C2.FK_IDCOUNTRY
        WHERE C2.NAME_CITY = 'Dayton'
        GROUP BY NAME_CITY
    );

------------------------ QUERY 18 ------------------------
SELECT SUBSTR(
        (DELIVERY_DATE), 1, INSTR((DELIVERY_DATE), ' ')-1) DIA,
       FIRST_LAST_USER,
       SUM(AMOUNT_PAY) GANANCIA,
       COUNT(FIRST_LAST_USER) CANT_RENTAS
FROM RENT
INNER JOIN USER_STORE US on US.CODE_USER = RENT.FK_IDWORKER
GROUP BY SUBSTR(
        (DELIVERY_DATE), 1, INSTR((DELIVERY_DATE), ' ')-1), FIRST_LAST_USER
HAVING SUM(AMOUNT_PAY) > 15 AND COUNT(FIRST_LAST_USER) > 2;

------------------------ QUERY 19 ------------------------

SELECT B.FIRST_LAST_USER, CANTIDAD,
       SUBSTR(
           SUBSTR(
            (RENT_DATE), 1, INSTR((RENT_DATE), ' ')-1),
           4, INSTR((SUBSTR(
            (RENT_DATE), 1, INSTR((RENT_DATE), ' ')-1)), '/')-1
        ) MES
FROM (
    SELECT US.CODE_USER, US.FIRST_LAST_USER, COUNT(*) CANTIDAD FROM RENT
    INNER JOIN USER_STORE US on US.CODE_USER = RENT.FK_IDCLIENT
    GROUP BY FIRST_LAST_USER, US.CODE_USER
    ORDER BY COUNT(*) DESC
    FETCH FIRST 1 ROWS ONLY
) B
INNER JOIN RENT ON B.CODE_USER = RENT.FK_IDCLIENT
FETCH FIRST 1 ROWS ONLY